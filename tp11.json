/*
CTP11: Evitar periodos largos de revisión de código
Descripción:

Evaluar la eficiencia del proceso de revisión de código es fundamental para garantizar una rápida integración de cambios y una respuesta ágil a las solicitudes de fusión. Esta CTP se centra en el tiempo que lleva aprobar los cambios de código durante el proceso de revisión.

Requisitos previos: 

Existe un proceso formal de revisión de código en el equipo.
Hay establecidas pautas claras para la aprobación de cambios durante la revisión de código.

Métricas:

TMR: Tiempo medio de todas las reviews (desde que se asigna hasta que se aprueba) de las P/R del equipo durante la última semana

Objetivo:
TMR<TLTP11
Semanalmente por Equipo

Posibles falsos positivos:
Se implementan procesos automáticos que fusionan ramas sin una revisión humana adecuada.

Parámetros:

TLTP11= 1 día

TLTP11: representa el límite de tiempo medio aceptado.
*/

{
  "config": {
    "scopeManager": "http://host.docker.internal:5700/api/v1/scopes/development"
  },
  "metric": {
    "computing": "actual",
    "element": "number",
    "event": {
      "githubGQL": {
        "custom": {
          "type": "graphQL",
          "title": "Get pull requests review time",
          "steps": {
            "0": {
              "type": "queryGetObject",
              "query": "{\r\n  repository(name: \"%PROJECT.github.repository%\", owner: \"%PROJECT.github.repoOwner%\") {\r\n    pullRequests(first: 100) {\r\n      pageInfo {\r\n        endCursor\r\n        hasNextPage\r\n      }\r\n      nodes {\r\n        bodyText\r\n        number\r\n        state\r\n        createdAt\r\n        author {\r\n          login\r\n        }\r\n        mergedAt\r\n        mergedBy {\r\n          login\r\n        }\r\n        additions\r\n        comments(first: 50) {\r\n          nodes {\r\n            author {\r\n              login\r\n            }\r\n            bodyText\r\n            createdAt\r\n          }\r\n        }\r\n        reviews(first: 30) {\r\n          nodes {\r\n            state\r\n            createdAt\r\n            bodyText\r\n            author {\r\n              login\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
            },
            "1": {
              "type": "objectGetSubObjects",
              "location": "data.repository.pullRequests.nodes"
            },
            "2": {
              "type": "runScript",
              "variables": {},
              "script": "module.exports.generic = function getPullRequestsReviewTime(inputData,variables)  {\r\n    let reviewTimes = []\r\n    for (let pullRequest of inputData) {\r\n\r\n        if (pullRequest.author.login === '%MEMBER.github.username%') continue;\r\n\r\n        if (pullRequest.state === 'MERGED') {\r\n            for (let review of pullRequest.reviews.nodes) {\r\n                if (review.state === 'APPROVED') {\r\n                    let reviewTime = (new Date(review.createdAt) - new Date(pullRequest.createdAt)) / 60000;\r\n                    reviewTimes.push(reviewTime);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return reviewTimes;\r\n}"
            }
          }
        }
      }
    },
    "scope": {
      "project": "TFG-GH-antoniiosc7_Glassmatrix",
      "class": "TFG",
      "member": "*"
    },
    "window": {
      "type": "static",
      "period": "hourly",
      "initial": "2024-05-12T17:00:00.000Z",
      "from": "2024-05-12T17:00:00.000Z",
      "end": "2024-05-13T17:59:00.000Z",
      "timeZone": "America/Los_Angeles"
    }
  }
}

/*

query {
  repository(name: "tp-testbench", owner: "antoniiosc7") {
    pullRequests(first: 100, states: OPEN) {
      nodes {
        title
        number
        createdAt
        reviews(first: 100) {
          nodes {
            author {
              login
            }
            createdAt
          }
        }
      }
    }
  }
}
*/